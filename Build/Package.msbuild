<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Package">

  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>
  <Import Project="$(MSBuildExtensionsPath)\Microsoft\StyleCop\Current\Microsoft.StyleCop.Targets"/>
  <UsingTask TaskName="MSBuild.ExtensionPack.Compression.DNZip" AssemblyFile="$(MSBuildExtensionsPath)\ExtensionPack\MSBuild.ExtensionPack.dll"></UsingTask>

  <Import Project="CommonProperties.msbuild"/>
  
  <PropertyGroup>
    <BuildConfiguration>Release</BuildConfiguration>
    <LocalTagDirName>TempTagSvnRoot</LocalTagDirName>
    <SvnBuildRoot>$(SvnServerRoot)/$(BUILD_ROOT)</SvnBuildRoot>
    <!-- BUILD_VCS_NUMBER is a TeamCity supplied variable -->
    <SvnRevision>$(BUILD_VCS_NUMBER)</SvnRevision>
  </PropertyGroup>

  <ItemGroup>
    <DeploymentItem Include="$(Root)\Build\.arm\**\*">
      <TargetFolder>$(ZipARMSystemFilesLocation)</TargetFolder>
    </DeploymentItem>
    <DeploymentItem Include="$(Root)\UI\Rbs.Gbm.Wfe.UI.rPeople\**\*">
      <TargetFolder>$(ZipPackageClientFilesLocation)</TargetFolder>
    </DeploymentItem>
    <DeploymentItem Include="$(Root)\Utilities\Rbs.Gbm.Wfe.Utilities.DevConsole\bin\$(buildConfig)\**\*">
      <TargetFolder>$(ZipPackageDevConsoleFilesLocation)</TargetFolder>
    </DeploymentItem>
    <DeploymentItem Include="$(Root)\Utilities\Rbs.Gbm.Wfe.Utilities.Release\bin\$(buildConfig)\**\*">
      <TargetFolder>$(ZipPackageConsoleFilesLocation)</TargetFolder>
    </DeploymentItem>
    <DeploymentItem Condition="Exists('$(Root)\Utilities\Services\Rbs.Gbm.Wfe.Utilities.Services.PayviewReconciler')" Include="$(Root)\Utilities\Services\Rbs.Gbm.Wfe.Utilities.Services.PayviewReconciler\bin\$(buildConfig)\**\*">
      <TargetFolder>$(ZipPackagePayviewReconcilerFilesLocation)</TargetFolder>
    </DeploymentItem>
    <DeploymentItem Condition="Exists('$(Root)\Utilities\Services\Rbs.Gbm.Wfe.Utilities.Services.DataImportExport')" Include="$(Root)\Utilities\Services\Rbs.Gbm.Wfe.Utilities.Services.DataImportExport\bin\$(buildConfig)\**\*">
      <TargetFolder>$(ZipPackageeCompDataServiceFilesLocation)</TargetFolder>
    </DeploymentItem>
    <!-- TODO: add other deployment items in here (WCF, Windows services) -->
  </ItemGroup>

  <Target Name="Package">
    <CallTarget Targets="Clean" />
    <CallTarget Targets="PrepareFiles" />
    <CallTarget Targets="CreateZip" />
  </Target>

  <Target Name="PackageAndCheckin">
    <CallTarget Targets="Clean" />
    <CallTarget Targets="PrepareFiles" />
    <CallTarget Targets="CreateZip" />
    <CallTarget Targets="TagZip" />
  </Target>

  <Target Name="Clean">
    <Exec Condition="Exists('$(Root)\Deploy')" Command="rmdir $(Root)\Deploy /S /Q" ContinueOnError="true"></Exec>
  </Target>

  <Target Name="PrepareFiles">

    <MakeDir Directories="$(Root)\Deploy\"  />
    <MakeDir Directories="$(WorkingPackagesFolder)"  />

    <Copy
      SourceFiles="@(DeploymentItem)"
      DestinationFiles="@(DeploymentItem->'$(Root)\Deploy\%(TargetFolder)\%(RecursiveDir)%(Filename)%(Extension)')"
      Condition="%(DeploymentItem.FlattenStructure)!='TRUE'"
          />
  </Target>

  <Target Name="CreateZip">

    <CreateItem Include="$(Root)\Deploy\**" >
      <Output ItemName="ZipFiles" TaskParameter="Include"/>
    </CreateItem>

    <MSBuild.ExtensionPack.Compression.DNZip TaskAction="Create" RemoveRoot="$(Root)\Deploy" ZipFileName="$(LocalPackageZip)" CompressFiles="@(ZipFiles)" />

  </Target>

  <Target Name="TagZip" >

    <PropertyGroup>
      <LocalTagDir>$(Root)\$(LocalTagDirName)</LocalTagDir>
      <SvnPackageZip>$(LocalTagDir)\$(ZipPackageName)</SvnPackageZip>
    </PropertyGroup>

    <ItemGroup>
      <BuildZip Include="$(LocalPackageZip)" />
      <TaggedZip Include="$(SvnPackageZip)" />
    </ItemGroup>

    <!-- Check if the tag already exists before we try to check it in -->
    <Message Importance="High" Text="Branch Build :$(SvnBuildRoot)"/>
    <Message Importance="High" Text="Checking if Tag $(Revision) already exists"/>
    <SvnClient Command="ls $(SvnServerTagPath)"
        Username="$(SvnUser)"
        Password="$(SvnPass)"
        ContinueOnError="true" 
        Arguments="--non-interactive --trust-server-cert --no-auth-cache"
        ToolPath="$(SvnPath)">
      <Output TaskParameter="ExitCode" PropertyName="TagIsAvailable"/>
    </SvnClient>
    <Message Importance="High" Text="SvnBuildRoot: $(SvnBuildRoot), deploy_env: $(deploy_env)" />
    <Message Importance="High" Condition="$(TagIsAvailable)=='0'" Text="Tag $(Revision) already exists, exiting."/>
    <Message Importance="High" Condition="$(TagIsAvailable)!='0'" Text="Tag $(Revision) not found, okay to create it"/>

    <!-- Copy the code from the specified svn revision to the tags folder in svn -->
    <SvnCopy Condition="$(TagIsAvailable)!='0'"
			  SourcePath="$(SvnBuildRoot)"
              DestinationPath="$(SvnServerTagPath)"
              Arguments="--non-interactive --trust-server-cert --no-auth-cache"
              Message="WFE-000: Tagging Team City build $(Revision)"
              Username="$(SvnUser)"
              Password="$(SvnPass)"
              Revision="$(SvnRevision)"
              ToolPath="$(SvnPath)" />

    <Exec Condition="$(TagIsAvailable)!='0'" Command="rmdir $(LocalTagDir) /S /Q"  ContinueOnError="true"></Exec>
    <Exec Condition="$(TagIsAvailable)!='0'" Command="mkdir $(LocalTagDir) " ></Exec>

    <!-- svn checkout the new tag to a temp directory we just created so that we can add the zip -->
    <SvnClient Condition="$(TagIsAvailable)!='0'" Command="checkout"
                RepositoryPath="$(SvnServerTagPath)"
                LocalPath="$(LocalTagDir)"
                Arguments="--non-interactive --non-recursive --trust-server-cert --no-auth-cache"
                Username="$(SvnUser)"
                Password="$(SvnPass)"
                ToolPath="$(SvnPath)" />
    
    <!-- copy the zip tp the temp directory mentioned above -->
    <Copy Condition="$(TagIsAvailable)!='0'" SourceFiles="@(BuildZip)" DestinationFolder="$(LocalTagDir)" />

    <!-- add the zip to svn -->
    <SvnClient Condition="$(TagIsAvailable)!='0'" 
		Arguments="$(SvnPackageZip) --non-interactive --trust-server-cert --no-auth-cache"
                Username="$(SvnUser)"
                Password="$(SvnPass)"
		Command="add" ToolPath="$(SvnPath)" />
    
    <!-- commit the zip to svn -->
    <SvnCommit Condition="$(TagIsAvailable)!='0'"
		Arguments="--non-interactive --trust-server-cert --no-auth-cache"
                Username="$(SvnUser)"
                Password="$(SvnPass)"
		Targets="@(TaggedZip)"
		Message="WFE-000: Adding zipped binaries to tag for build $(Revision)" 
        ToolPath="$(SvnPath)" />
    
  </Target>
  
</Project>